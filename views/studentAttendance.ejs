<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mark Attendance - AntiProxy</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        :root {
            --primary: #6366f1;
            --secondary: #4f46e5;
            --dark: #1e1b4b;
            --light: #eef2ff;
        }

        body {
            font-family: 'Plus Jakarta Sans', sans-serif;
            background: linear-gradient(135deg, var(--light) 0%, #fff 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            padding: 2rem 0;
        }

        .attendance-form {
            background: white;
            border-radius: 24px;
            padding: 3rem;
            box-shadow: 
                0 0 0 1px rgba(0, 0, 0, 0.05),
                0 20px 40px -20px rgba(0, 0, 0, 0.15),
                0 40px 60px -30px rgba(99, 102, 241, 0.25);
        }

        .form-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .form-title {
            color: var(--dark);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .form-subtitle {
            color: #6b7280;
            font-size: 1rem;
        }

        .form-icon {
            font-size: 3rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }

        .form-control {
            padding: 0.75rem 1.2rem;
            border-radius: 12px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
        }

        .form-label {
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.5rem;
        }

        .form-select {
            padding: 0.75rem 1.2rem;
            border-radius: 12px;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .btn-location {
            padding: 1rem;
            border-radius: 12px;
            transition: all 0.3s ease;
            font-weight: 600;
        }

        .btn-location.btn-outline-primary {
            border: 2px solid var(--primary);
        }

        .btn-location.btn-success {
            background: #10b981;
            border: none;
        }

        .btn-location:hover {
            transform: translateY(-2px);
        }

        .location-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-top: 0.75rem;
            padding: 0.5rem 1rem;
            background: rgba(16, 185, 129, 0.1);
            border-radius: 8px;
        }

        .btn-submit {
            background: var(--primary);
            color: white;
            padding: 1rem;
            border-radius: 12px;
            border: none;
            font-weight: 600;
            width: 100%;
            transition: all 0.3s ease;
        }

        .btn-submit:hover:not(:disabled) {
            background: var(--secondary);
            transform: translateY(-2px);
            box-shadow: 0 8px 20px -8px var(--primary);
        }

        .btn-submit:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }

        @media (max-width: 768px) {
            .attendance-form {
                padding: 2rem;
                margin: 1rem;
            }

            .form-title {
                font-size: 1.75rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <div class="attendance-form">
                    <div class="form-header">
                        <i class="bi bi-person-check form-icon"></i>
                        <h1 class="form-title">Mark Your Attendance</h1>
                        <p class="form-subtitle">Please fill in your details accurately</p>
                    </div>
                    <form id="studentForm">
                        <div class="mb-4">
                            <label class="form-label">Full Name</label>
                            <input type="text" class="form-control" name="name" placeholder="Enter your full name" required>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Roll Number</label>
                            <input type="text" class="form-control" name="roll" placeholder="Enter your roll number" required>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Select Your Class</label>
                            <select class="form-select" name="class_id" required>
                                <option value="">Choose your class</option>
                                <% classes.forEach(classItem => { %>
                                    <option value="<%= classItem.class_id %>">
                                        <%= classItem.class_name %>
                                    </option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="mb-4">
                            <button type="button" class="btn btn-location btn-outline-primary w-100" id="getLocationBtn">
                                <i class="bi bi-geo-alt me-2"></i>Verify Your Location
                            </button>
                            <div class="location-status d-none" id="locationStatus">
                                <i class="bi bi-check-circle-fill text-success"></i>
                                <span class="text-success">Location verified successfully</span>
                            </div>
                            <input type="hidden" name="latitude" id="latitude" required>
                            <input type="hidden" name="longitude" id="longitude" required>
                        </div>
                        <button type="submit" class="btn btn-submit" id="submitBtn" disabled>
                            Mark Attendance
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script defer src="https://cdn.jsdelivr.net/npm/@fingerprintjs/fingerprintjs@3/dist/fp.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            const getLocationBtn = document.getElementById('getLocationBtn');
            const locationStatus = document.getElementById('locationStatus');
            const latitudeInput = document.getElementById('latitude');
            const longitudeInput = document.getElementById('longitude');
            const submitBtn = document.getElementById('submitBtn');
            const studentForm = document.getElementById('studentForm');
            let deviceId = localStorage.getItem('device_id');

            // Initialize FingerprintJS and get device ID
            async function getDeviceId() {
                const fp = await FingerprintJS.load();
                const result = await fp.get();
                deviceId = result.visitorId;
                localStorage.setItem('device_id', deviceId);
                console.log('Device ID:', deviceId);
            }

            // If device ID is not already stored, get it
            if (!deviceId) {
                await getDeviceId();
            }

            getLocationBtn.addEventListener('click', function() {
                if ("geolocation" in navigator) {
                    getLocationBtn.disabled = true;
                    getLocationBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Getting Location...';

                    navigator.geolocation.getCurrentPosition(function(position) {
                        latitudeInput.value = position.coords.latitude;
                        longitudeInput.value = position.coords.longitude;
                        locationStatus.classList.remove('d-none');
                        submitBtn.disabled = false;
                        getLocationBtn.innerHTML = '<i class="bi bi-geo-alt"></i> Location Verified';
                        getLocationBtn.classList.replace('btn-outline-primary', 'btn-success');
                    }, function() {
                        getLocationBtn.disabled = false;
                        getLocationBtn.innerHTML = '<i class="bi bi-geo-alt"></i> Retry Getting Location';
                        alert("Please allow location access to mark attendance.");
                    }, {
                        enableHighAccuracy: true,
                        timeout: 10000,
                        maximumAge: 0
                    });
                } else {
                    alert("Geolocation is not supported by this browser.");
                }
            });

            studentForm.addEventListener('submit', async function(e) {
                e.preventDefault();

                if (!deviceId) {
                    alert('Fetching device information. Please wait...');
                    return;
                }

                const formData = new FormData(this);
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Marking...';

                try {
                    const response = await fetch(window.location.href, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            name: formData.get('name'),
                            roll: formData.get('roll'),
                            class_id: formData.get('class_id'),
                            latitude: formData.get('latitude'),
                            longitude: formData.get('longitude'),
                            device_id: deviceId
                        })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.error || 'Failed to mark attendance');
                    }

                    alert('Attendance marked successfully!');
                    window.location.replace("https://www.google.com");

                } catch (error) {
                    alert(error.message);
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Mark Attendance';
                }
            });
        });
    </script>
</body>
</html>
